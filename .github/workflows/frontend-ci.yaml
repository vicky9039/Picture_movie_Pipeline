name: Frontend Continuous Integration

on:
  workflow_dispatch:  # Allow manual triggering
  pull_request:
    branches:
      - main

jobs:
  Lint_Job:
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - name: Check the Repository
      uses: actions/checkout@v4

    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci 

    - name: checkout the lint
      working-directory: starter/frontend
      run: npm run lint
         

  Test_Job:
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v4

    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: Install Dependencies
      working-directory: starter/frontend
      run: npm ci 
    
    - name: checkout the tests
      working-directory: starter/frontend
      run: npm run test
      
  Build_Job:
    needs: [Lint_Job, Test_Job]
    runs-on: ubuntu-latest
    
    steps:
    - name: Check the Repository
      uses: actions/checkout@v4
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: starter/frontend
      run: npm ci

    - name: checkout the tests
      working-directory: starter/frontend
      run: npm run test


    - name: Build Images  Run Docker Image
      working-directory: starter/backend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .
        docker run --name mp-frontend -p 3000:3000 -d mp-frontend